<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright (C) 2011 David Thomas Hume <dth@dthu.me>

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<article xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink">

  <info>
    <title>Usage</title>

    <pubdate>2012-05-07</pubdate>

    <abstract>
      <para>
        An overview of how to use the extra enforcer rules
      </para>
    </abstract>
  </info>
  
  <para>
    To use any of the extra enforcer rules, you must first add the project
    as a dependency of the enforcer plugin, as detailed in <link
    xlink:href="http://maven.apache.org/enforcer/enforcer-api/writing-a-custom-rule.html"
    >Writing a custom rule</link>:
  </para>
  
  <example>
    <title>Adding the dependency to the enforcer plugin.</title>
    <programlisting language="xml"
><![CDATA[<project>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>]]><?eval ${enforcerPluginVersion}?><![CDATA[</version>
        <dependencies>
          <dependency>
            <groupId>]]><?eval ${project.groupId}?><![CDATA[</groupId>
            <artifactId>]]><?eval ${project.artifactId}?><![CDATA[</artifactId>
            <version>]]><?eval ${project.version}?><![CDATA[</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>]]></programlisting>
  </example>

  <section>
    <title>The Script Rule</title>
    <para>
      The <code
      xlink:href="./apidocs/org/dthume/maven/enforcer/ScriptRule.html"
      >ScriptRule</code> is capable of evaluating a script via any
      <link
      xlink:href="http://en.wikipedia.org/wiki/Scripting_for_the_Java_Platform"
      >JSR223</link> compliant <code
      xlink:href="http://docs.oracle.com/javase/6/docs/api/javax/script/ScriptEngine.html"
      >ScriptEngine</code>.
      
      Note, however, that the rule uses the <link
      xlink:href="http://commons.apache.org/bsf/">Bean Scripting
      Framework</link> version 3+ in order to support deployment to JDK 1.5
      environments.

      If you are running in a JRE prior to version 6, or wish to use a
      scripting language other than JavaScript, then you will first need to
      add an appropriate scripting engine dependency, such as <link
      xlink:href="http://groovy.codehaus.org">Groovy</link>
      to the enforcer plugin.
    </para>

    <example>
      <title>Adding Groovy as a dependency to the enforcer plugin.</title>
      <programlisting language="xml"
><![CDATA[<project>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>]]><?eval ${enforcerPluginVersion}?><![CDATA[</version>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>1.8.6</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>]]></programlisting>
    </example>
    
    <para>
      With an appropriate scripting language available, the rule can then be
      configured to execute scripts as follows:
    </para>

    <example>
      <title>Configuring an inline <code>ScriptRule</code>.</title>
      <programlisting language="xml"
><![CDATA[<project>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>]]><?eval ${enforcerPluginVersion}?><![CDATA[</version>
        <configuration>
          <rules>
            <scriptRule implementation="org.dthume.maven.enforcer.ScriptRule">
              <language>javascript</language>
              <!-- Always pass -->
              <script>1 === 1</script>
            </scriptRule>
          </rules>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>]]></programlisting>
    </example>

    <example>
      <title>Configuring a <code>ScriptRule</code> with a file.</title>
      <programlisting language="xml"
><![CDATA[<project>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>]]><?eval ${enforcerPluginVersion}?><![CDATA[</version>
        <configuration>
          <rules>
            <scriptRule implementation="org.dthume.maven.enforcer.ScriptRule">
              <language>javascript</language>
              <scriptFile>src/main/script/script.js</scriptFile>
            </scriptRule>
          </rules>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>]]></programlisting>
    </example>

    <example>
      <title>Setting a custom  failure message.</title>
      <programlisting language="xml"
><![CDATA[<project>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>]]><?eval ${enforcerPluginVersion}?><![CDATA[</version>
        <configuration>
          <rules>
            <scriptRule implementation="org.dthume.maven.enforcer.ScriptRule">
              <language>javascript</language>
              <!-- always fail -->
              <script>false;</script>
              <message>Custom failure message</message>
            </scriptRule>
          </rules>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>]]></programlisting>
    </example>

    <example>
      <title>Getting access to the <code>EnforcerRuleHelper</code>.</title>
      <programlisting language="xml"
><![CDATA[<project>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>]]><?eval ${enforcerPluginVersion}?><![CDATA[</version>
        <configuration>
          <rules>
            <scriptRule implementation="org.dthume.maven.enforcer.ScriptRule">
              <language>javascript</language>
              <ruleHelperKey>helper</ruleHelperKey>
              <script>helper.evaluate("${someExpression}");</script>
            </scriptRule>
          </rules>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>]]></programlisting>
    </example>

    <example>
      <title>Specifying custom script bindings.</title>
      <programlisting language="xml"
><![CDATA[<project>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>]]><?eval ${enforcerPluginVersion}?><![CDATA[</version>
        <configuration>
          <rules>
            <scriptRule implementation="org.dthume.maven.enforcer.ScriptRule">
              <language>javascript</language>
              <script>binding1 === binding2</script>
              <scriptBindings>
                <binding1>${someExpression}</binding1>
                <binding2>literal value</binding2>
              </scriptBindings>
            </scriptRule>
          </rules>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>]]></programlisting>
    </example>

  </section>
</article>
